{"version":3,"sources":["js/app.js"],"names":["window","onload","document","getElementById","value","audioContext","AudioContext","webkitAudioContext","oscillator","createOscillator","type","frequency","detune","setValueAtTime","currentTime","gainNode","createGain","gain","connect","destination","gainNodeNoise","start","querySelector","addEventListener","e","target","shortcuts","getElementsByClassName","console","log","length","shortcutClick","shortcutAttr","getAttribute","oscRange","oscValue","i","onOff","disconnect","setAttribute","innerHTML","whiteBufferSize","sampleRate","noiseBuffer","createBuffer","output","getChannelData","Math","random","whiteNoise","createBufferSource","buffer","loop","volume","pinkBufferSize","pinkNoise","b0","b1","b2","b3","b4","b5","b6","node","createScriptProcessor","onaudioprocess","outputBuffer","white","brownBufferSize","brownNoise","lastOut","whiteNoiseCheck","checked","pinkNoiseCheck","brownNoiseCheck","oscLower","oscHigher","parseInt"],"mappings":"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","file":"app.c3f9f951.js","sourceRoot":"../src","sourcesContent":["// On load resets\n\nwindow.onload = function () {\n    document.getElementById(\"oscValue\").value = \"440\";\n    document.getElementById(\"oscRange\").value = 440;\n};\n\n// Initialize audio\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\n\n// Create oscillator\n\nconst oscillator = audioContext.createOscillator();\noscillator.type = \"sine\";\noscillator.frequency.value = 440; // value in hertz\noscillator.detune.setValueAtTime(0, audioContext.currentTime); // value in cents\n\n// Connect Gain to Oscillator\n\nconst gainNode = audioContext.createGain();\ngainNode.gain.value = 0;\noscillator.connect(gainNode);\ngainNode.connect(audioContext.destination);\n// Connect Gain to All three types of Noise\n\nconst gainNodeNoise = audioContext.createGain();\ngainNodeNoise.gain.value = 0;\ngainNodeNoise.connect(audioContext.destination);\n\n// Start oscillator\n\noscillator.start();\n\n// Frequency control\n\ndocument.querySelector(\"#oscRange\").addEventListener(\"input\", (e) => {\n    oscillator.frequency.value = e.target.value;\n});\n\n// Frequency shortcuts\n\nconst shortcuts = document.getElementsByClassName(\"shortcut\");\nconsole.log(shortcuts.length);\n\nconst shortcutClick = function () {\n    let shortcutAttr = this.getAttribute(\"data-freq\");\n    oscillator.frequency.value = shortcutAttr;\n    oscRange.value = shortcutAttr;\n    oscValue.value = shortcutAttr;\n};\n\nfor (let i = 0; i < shortcuts.length; i++) {\n    shortcuts[i].addEventListener(\"click\", shortcutClick, false);\n}\n\n// Frequency Volume control\n\ndocument.querySelector(\"#volume\").addEventListener(\"input\", (e) => {\n    gainNode.gain.value = e.target.value * 0.01;\n});\n\n// Detune control\n\ndocument.querySelector(\"#detune\").addEventListener(\"input\", (e) => {\n    oscillator.detune.setValueAtTime(e.target.value, audioContext.currentTime);\n}); // change detuning when using the slider\n\n// Wave type selection\n//need to loop through all radio buttons and add event listener to that loop\n// document.querySelectorAll('[name=\"radio\"').addEventListener(\"click\", (e) => {\n//     oscillator.type = e.target.value;\n// });\n\n// On and Off button\n\nconst onOff = document.querySelector(\"#onOff\");\n\nonOff.addEventListener(\"click\", (e) => {\n    if (onOff.getAttribute(\"data-muted\") === \"false\") {\n        gainNode.disconnect(audioContext.destination);\n        gainNodeNoise.disconnect(audioContext.destination);\n        onOff.setAttribute(\"data-muted\", \"true\");\n        onOff.innerHTML = \"Play\";\n    } else {\n        gainNode.connect(audioContext.destination);\n        gainNodeNoise.connect(audioContext.destination);\n        onOff.setAttribute(\"data-muted\", \"false\");\n        onOff.innerHTML = \"Stop\";\n    }\n});\n\n// White Noise\n\nconst whiteBufferSize = 2 * audioContext.sampleRate,\n    noiseBuffer = audioContext.createBuffer(\n        1,\n        whiteBufferSize,\n        audioContext.sampleRate\n    ),\n    output = noiseBuffer.getChannelData(0);\nfor (let i = 0; i < whiteBufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n}\n\nconst whiteNoise = audioContext.createBufferSource();\nwhiteNoise.buffer = noiseBuffer;\nwhiteNoise.loop = true;\nwhiteNoise.volume = 0;\nwhiteNoise.start(0);\nconsole.log(whiteNoise);\n\n// Pink Noise\n\nconst pinkBufferSize = 4096;\nconst pinkNoise = (function () {\n    let b0, b1, b2, b3, b4, b5, b6;\n    b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n    const node = audioContext.createScriptProcessor(pinkBufferSize, 1, 1);\n    node.onaudioprocess = function (e) {\n        const output = e.outputBuffer.getChannelData(0);\n        for (let i = 0; i < pinkBufferSize; i++) {\n            const white = Math.random() * 2 - 1;\n            b0 = 0.99886 * b0 + white * 0.0555179;\n            b1 = 0.99332 * b1 + white * 0.0750759;\n            b2 = 0.969 * b2 + white * 0.153852;\n            b3 = 0.8665 * b3 + white * 0.3104856;\n            b4 = 0.55 * b4 + white * 0.5329522;\n            b5 = -0.7616 * b5 - white * 0.016898;\n            output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n            output[i] *= 0.11; // (roughly) compensate for gain\n            b6 = white * 0.115926;\n        }\n    };\n    return node;\n})();\n\n// Brown Noise\n\nconst brownBufferSize = 4096;\nconst brownNoise = (function () {\n    let lastOut = 0.0;\n    const node = audioContext.createScriptProcessor(brownBufferSize, 1, 1);\n    node.onaudioprocess = function (e) {\n        const output = e.outputBuffer.getChannelData(0);\n        for (let i = 0; i < brownBufferSize; i++) {\n            const white = Math.random() * 2 - 1;\n            output[i] = (lastOut + 0.02 * white) / 1.02;\n            lastOut = output[i];\n            output[i] *= 3.5; // (roughly) compensate for gain\n        }\n    };\n    return node;\n})();\n\n\n// Start White noise\n\nconst whiteNoiseCheck = document.querySelector(\"input[name=whiteNoise]\");\n\nwhiteNoiseCheck.addEventListener(\"change\", function () {\n    if (this.checked) {\n        // Checkbox is checked\n        whiteNoise.connect(gainNodeNoise);\n        gainNodeNoise.connect(audioContext.destination);\n    } else {\n        // Checkbox is not checked\n        whiteNoise.disconnect(gainNodeNoise);\n        gainNodeNoise.disconnect(audioContext.destination);\n    }\n});\n\n// Start Pink noise\n\nconst pinkNoiseCheck = document.querySelector(\"input[name=pinkNoise]\");\n\npinkNoiseCheck.addEventListener(\"change\", function () {\n    if (this.checked) {\n        // Checkbox is checked\n        pinkNoise.connect(gainNodeNoise);\n        gainNodeNoise.connect(audioContext.destination);\n    } else {\n        // Checkbox is not checked\n        pinkNoise.disconnect(gainNodeNoise);\n        gainNodeNoise.disconnect(audioContext.destination);\n    }\n});\n\n// Start Brown noise\n\nconst brownNoiseCheck = document.querySelector(\"input[name=brownNoise]\");\n\nbrownNoiseCheck.addEventListener(\"change\", function () {\n    if (this.checked) {\n        // Checkbox is checked\n        brownNoise.connect(gainNodeNoise);\n        gainNodeNoise.connect(audioContext.destination);\n    } else {\n        // Checkbox is not checked\n        brownNoise.disconnect(gainNodeNoise);\n        gainNodeNoise.disconnect(audioContext.destination);\n    }\n});\n\n\n// Noise Volume control\n\ndocument.querySelector(\"#noiseVolume\").addEventListener(\"input\", (e) => {\n    gainNodeNoise.gain.value = e.target.value * 0.01;\n});\n\n\n// Frequency button adjustment function\n\nconst oscLower = document.querySelector(\"#oscLower\");\nconst oscHigher = document.querySelector(\"#oscHigher\");\nconst oscRange = document.querySelector(\"#oscRange\");\nconst oscValue = document.querySelector(\"#oscValue\");\n\noscLower.addEventListener(\"click\", (e) => {\n    // when clicked increased the frequency level by 1\n    if (oscillator.frequency.value >= 1) {\n        oscillator.frequency.value = oscillator.frequency.value - 1;\n        oscRange.value = oscRange.value - 1;\n        oscValue.value = oscValue.value - 1;\n    } else {\n        return 1;\n    }\n});\n\noscHigher.addEventListener(\"click\", (e) => {\n    if (oscillator.frequency.value <= 20000) {\n        oscillator.frequency.value = oscillator.frequency.value + 1;\n        oscRange.value = parseInt(oscRange.value) + 1;\n        oscValue.value = parseInt(oscValue.value) + 1;\n    } else {\n        return;\n    }\n});\n"]}